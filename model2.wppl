// Helper function to compute letter frequencies in English
var letter_freq = json.read('letter_freq.json');
var word_freq = json.read('freq_dict.json');

// Basic model
var simpleModel = function() {
  // Just try to learn weights between frequency and random
  var useFrequency = flip(0.5)
  
  
  mapData({data: data}, function(game) {
    var availableLetters = filter(
      function(l) { return !game.previousGuesses.includes(l) },
      Object.keys(letterFrequencies)
    )
    
    // Choose distribution based on strategy
    if (useFrequency) {
      //M2: Use letter frequencies
      var freqSum = sum(map(function(l) { 
        return letterFrequencies[l]
      }, availableLetters))
      
      var probs = map(function(l) { 
        return letterFrequencies[l] / freqSum
      }, availableLetters)
      
      observe(Categorical({vs: availableLetters, ps: probs}), game.actualGuess)
    } else {
      //M1: Use random guessing
      observe(
        Categorical({
          vs: availableLetters, 
          ps: repeat(availableLetters.length, function() { 
            return 1/availableLetters.length 
          })
        }),
        game.actualGuess
      )
    }
  })
  
  return useFrequency
}




var data = [{
  pattern: "h_ll_",
  previousGuesses: ['h', 'l'],
  actualGuess: 'e'
}]

var posterior = Infer({
  method: 'MCMC',
  samples: 1000,
  model: simpleModel
})


expectation(posterior, function(x) { return x ? 1 : 0 })

    